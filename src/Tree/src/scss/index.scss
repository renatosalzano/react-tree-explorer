@import url('./button.scss');
@import url('./explorer.scss');

$item-size: 28px;

.tree-container {
  display: flex;
  flex-direction: column;

  .tree-header {
    display: flex;
    align-items: center;
    justify-content: space-between;
    border-bottom: 1px solid white;
    margin-bottom: 8px;

    .view-controls {
      display: flex;
      align-items: center;
      gap: 8px;
    }
  }

  .tree--root-list {
    display: flex;
    flex-direction: column;
    list-style: none;
  }
}

.tree-node {

  .tree-element {
    position: relative;
    display: flex;
    height: $item-size;
    padding-left: calc($item-size * var(--nested-index));

    .tree-active {
      position: absolute;
      inset: 0 0 0 0;
      border-radius: 4px;
      background-color: rgb(149, 0, 255);
      z-index: 0;
    }

    .tree-element--cta {
      width: $item-size;
      height: $item-size;
      padding: 0px;
      border: none;
      background: transparent;
      z-index: 1;

      &.tree-spinner {
        .spinner-icon {
          display: block;
          width: 100%;
          height: 100%;
          padding: 2px;
          animation: tree-loader-spin 500ms cubic-bezier(0.63, 0.23, 0.37, 0.57) infinite;
        }
      }
    }

    .node-label {
      flex: 1;
      display: flex;
      gap: 4px;
      line-height: $item-size;
      z-index: 1;
      cursor: pointer;

      svg {
        width: $item-size;
        height: $item-size;
        padding: 2px;
      }
    }
  }

  .node-list {
    position: relative;
    display: block !important;
    max-height: 0;
    overflow: hidden;
    transform-origin: top;
    transition: all var(--list-transistion-time) ease-out;
    z-index: 1;

    &[data-list-state="start-0"] {
      max-height: unset;
    }

    &[data-list-state="start"] {
      animation-name: open-list;
      animation-duration: var(--list-transistion-time);
      animation-fill-mode: forwards;
    }

    &[data-list-state="end"] {
      animation-name: close-list;
      animation-duration: var(--list-transistion-time);
      animation-fill-mode: forwards;
    }

    .node-list-line {
      position: absolute;
      left: calc($item-size * var(--nested-index));
      top: 0;
      bottom: 0;

      border-left: 1px solid white;
      margin-left: calc($item-size / 2);
      z-index: 10;
    }
  }
}

@keyframes open-list {
  0% {}

  99% {
    overflow: hidden;
    max-height: calc($item-size * var(--items-count));
  }

  100% {
    overflow: unset;
    max-height: unset;
  }
}

@keyframes close-list {
  0% {
    overflow: hidden;
    max-height: calc($item-size * var(--items-count));
  }

  100% {
    max-height: 0;
  }
}

@keyframes tree-loader-spin {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}

.list-unstyled {
  padding: 0;
  margin: 0;

  li {
    list-style: none;
  }
}